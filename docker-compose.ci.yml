# this file is used to build containers on github actions and store them.

version: '2'

services:
  db:
    build:
      context: .
      dockerfile: dockerfiles/docker_postgres.conf
      #cache_from:
       # - "${DB_IMAGE}"
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: changeme
    restart: always
    image: "${DB_IMAGE}"
    expose:
      - "5432"

  redis:
    build:
      context: .
      dockerfile: dockerfiles/docker_redis.conf
     # cache_from:
       # - "${REDIS_IMAGE}"
    restart: always
    image: "${REDIS_IMAGE}"
    expose:
      - "6379"
  elasticsearch:
    build:
      context: .
      dockerfile: dockerfiles/docker_elastic.conf
      #cache_from:
       # - "${ELASTIC_IMAGE}"
    image: "${ELASTIC_IMAGE}"
    restart: always
    expose:
      - "9200"
  web:
    environment:
      DJANGO_SECRET_KEY: changeme
      DATABASE_URL: postgres://app_user:changeme@db/app_db
      CACHE_URL: redis://redis
      ELASTICSEARCH_ENDPOINT: elasticsearch
    build:
      context: .
      dockerfile: dockerfiles/docker_django_prod.conf
     # cache_from:
        #- "${WEB_IMAGE}"
    image: "${WEB_IMAGE}"

    volumes:
      - static-root:/code/bakerydemo/collect_static
      - media-root:/code/bakerydemo/media
    links:
      - db:db
      - redis:redis
      - elasticsearch:elasticsearch
    ports:
      - "8001:8001"
    depends_on:
      - db
      - redis
      - elasticsearch

  nginx:
    restart: always
    image: "${NGINX_IMAGE}"
    volumes:
      - media-root:/code/bakerydemo/media
      - static-root:/code/bakerydemo/static
    build:
      context: .
      dockerfile: dockerfiles/docker_nginx.conf
      #cache_from:
        #- "${NGINX_IMAGE}"
    depends_on:
     - web
    labels:
      - "traefik.enable=true"
      # we have only 5 attempts per week for requesting/updating certificates
      # be carefull with that.
      - "traefik.http.routers.nginx.rule=Host(`www.pythonx.ru`, `pythonx.ru`)"
      - "traefik.http.routers.nginx.entrypoints=websecure"
      - "traefik.http.routers.nginx.tls.certresolver=myresolver"

volumes:
  media-root:
  static-root:
